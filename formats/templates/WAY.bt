//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: WAY.bt
//   Authors: Alexandr Evdokimov
//   Version: 0.1
//   Purpose: Hard truck 2 WAY file
//
//   History: 
//    
//   2018.05 v 0.1 initial release 
//
//------------------------------------------------

local uchar i[4];
local uint pos = 0;
local float padding = 0;

typedef enum <char> {
  MNAM, // = Name
  GDAT, //
  GROM,
  RNAM, // = Room Name
  RNOD, // = Room Node
  NNAM, // = node name
  POSN, // = position
  WDTH, // = width
  RSEG, // = Room Segment
  ATTR, // = Attributes
  VDAT, //
  RTEN, // ??
  FLAG, //
} IDENTIFIER;


struct {
  char WTWR[4] <name="WTWR signature">;
  UINT DataSize; // File size - 8
  IDENTIFIER id1[4];
  UINT Count; //
  char RegionShortName[4] <name="Region Short Name">;
  IDENTIFIER id12[4];  
  UINT DataSize; // File size - Header size
} Header <name="File Header">;

while (!FEof()) 
{ 
  struct {
    IDENTIFIER ID[4];
    if (ID == "GROM")
    {
      struct {
        UINT ChunkSize; //
        IDENTIFIER id4[4];
        struct {
          UINT NameLengh; //
          char Name[12]; 
        } NAME <name="Room Name">;  
      } CHUNK_HEADER <name="Chunk Header">;

      while (!FEof())  
      {     
        ReadBytes(i, FTell(), 4); 
        if (i == "GROM") break;
        struct { 
          IDENTIFIER id[4];
        } PID;
        if (PID.id == "RNOD") 
        {
          pos = 0;  
          struct {
            UINT NodDataSize; 
            struct {
              IDENTIFIER id[4];
              UINT Lengh;
              padding = -Lengh & 3;
              char Name[Lengh + padding];
              pos += Lengh + padding + 8;
            } NNAM;              
            while (pos < NodDataSize)
            {
              struct {
                IDENTIFIER id[4];
              } IS;
              pos += 4;
              if (IS.id == "POSN") 
              { 
                struct {
                  UINT SectionSize;
                  DOUBLE X;
                  DOUBLE Y;
                  DOUBLE Z;
                } POSN;
                pos += 28; 
              }; 
              if (IS.id == "FLAG")
              {  
                 struct {        
                   UINT SectionSize;
                   UINT Type;
                 } FLAG; 
                 pos += 8; 
              };
              if (IS.id == "ORTN")
              {
                struct {        
                  UINT SectionSize;
                  struct {
                    DOUBLE X;
                    DOUBLE Y;
                    DOUBLE Z;
                  } X;
                  struct {
                    DOUBLE X;
                    DOUBLE Y;
                    DOUBLE Z;
                  } Y;
                  struct {
                    DOUBLE X;
                    DOUBLE Y;
                    DOUBLE Z;
                  } Z;
                  struct {
                    DOUBLE X;
                    DOUBLE Y;
                     DOUBLE Z;
                  } Pos;
                } ORTN; 
                pos += 100; 
              };
            };   
          } RNOD <name="RNOD">;
        };

        if (PID.id == "RSEG") 
        {
          pos = 0;  
          struct {
            UINT SegDataSize;  
            struct {
              IDENTIFIER id[4];
              UINT SectionSize;
              UINT Unknown;
              DOUBLE Unknown;
              UINT LaneCount; // 2 - two lanes
            } ATTR;
            pos += 28; 
            while (pos < SegDataSize)
            {
              struct {
                IDENTIFIER id[4];
              } IS;
              pos += 4;
              if (IS.id == "VDAT")
              {
                struct {
                  UINT DataSize;
                  UINT Count;
                  struct { 
                    DOUBLE X;
                    DOUBLE Y;
                    DOUBLE Z;
                  } P[Count];  
                  pos += DataSize + 4;
                } VDAT;
              }; 
              if (IS.id == "WDTH")
              {
                struct {
                  UINT SectionSize;
                  DOUBLE Unknown;
                  DOUBLE Unknown; 
                } WDTH;
                pos += 24;
              };
              if (IS.id == "RTEN")
              {
                struct {
                  UINT Unknown;
                  UCHAR Name[4];
                  UINT Unknown; 
                } RTEN;
                pos += 16; 
              };   
                      
            };
          } RNOD <name="RSEG">;
        };
      };
    };
  } GROM;
}


